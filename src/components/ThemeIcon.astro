---
---
<style>
  .sun,
  .moon {
    transition: opacity 0.2s ease, transform 0.2s ease;
  }

  .moon {
    opacity: 0;
    transform: scale(0.75);
  }

  :global(html.dark) .moon {
    opacity: 1;
    transform: scale(1);
  }

  :global(html.dark) .sun {
    opacity: 0;
    transform: scale(0.75);
  }
</style>

<button id="themeToggle" class="theme-toggle" type="button" aria-label="Toggle color theme" aria-pressed="false">
  <svg
    class="sun"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    stroke-width="1.8"
    stroke-linecap="round"
    stroke-linejoin="round"
    aria-hidden="true"
  >
    <circle cx="12" cy="12" r="4" />
    <path d="M12 3v2m0 14v2m9-9h-2M5 12H3m15.364 6.364-1.414-1.414M6.05 6.05 4.636 4.636m13.728 0-1.414 1.414M6.05 17.95l-1.414 1.414" />
  </svg>
  <svg
    class="moon"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    stroke-width="1.8"
    stroke-linecap="round"
    stroke-linejoin="round"
    aria-hidden="true"
  >
    <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z" />
  </svg>
</button>

<script is:inline>
  const getPreferredTheme = () => {
    const stored = window.localStorage.getItem("theme");
    if (stored === "dark" || stored === "light") {
      return stored;
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
  };

  const toggleButton = document.getElementById("themeToggle");

  const applyTheme = (theme) => {
    const root = document.documentElement;
    root.classList.toggle("dark", theme === "dark");
    window.localStorage.setItem("theme", theme);
    toggleButton?.setAttribute("aria-pressed", theme === "dark" ? "true" : "false");
  };

  applyTheme(getPreferredTheme());

  toggleButton?.addEventListener("click", () => {
    const nextTheme = document.documentElement.classList.contains("dark") ? "light" : "dark";
    applyTheme(nextTheme);
  });
</script>
